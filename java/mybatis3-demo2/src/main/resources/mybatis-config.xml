<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">

<configuration>
    <!-- 1. 属性配置（可以在外部properties文件中定义） -->
    <!-- properties resource="config.properties"-->
    <properties >
        <!-- 也可以在内部定义属性 -->
        <property name="jdbc.driver" value="com.mysql.jdbc.Driver"/>
        <property name="jdbc.url" value="jdbc:mysql://localhost:5742/testdb?useSSL=false"/>
        <property name="jdbc.username" value="root"/>
        <property name="jdbc.password" value="123456"/>
        <!--property name="jdbc.datasourceurl" value="jdbc:mysql://localhost:5742/testdb?serverTimezone=UTC;characterEncoding=utf8;useUnicode=true;useSSL=false"/-->
    </properties>

    <!-- 2. 全局参数设置 -->
    <settings>

        <!-- 开启二级缓存，默认true -->
        <setting name="cacheEnabled" value="true"/>
        <!-- 开启延迟加载 -->
        <setting name="lazyLoadingEnabled" value="true"/>
        <!-- 积极加载时也加载所有属性，false时按需加载 -->
        <setting name="aggressiveLazyLoading" value="false"/>
        <!-- 数据库字段使用下划线命名，Java属性使用驼峰命名 -->
        <setting name="mapUnderscoreToCamelCase" value="true"/>
        <!-- 日志实现，使用 LOG4J2 -->
        <!--setting name="logImpl" value="SLF4J"/-->
        <setting name="logImpl" value="LOG4J2" />
        <!-- 默认执行器类型 SIMPLE/REUSE/BATCH -->
        <setting name="defaultExecutorType" value="SIMPLE"/>
    </settings>

    <!-- 3. 类型别名，简化映射配置 -->
    <typeAliases>
        <!-- 单个类别名 -->
        <typeAlias type="org.example.model.User" alias="User"/>
        <!-- 包扫描方式，自动将包下的类名作为别名 -->
        <package name="org.example.model"/>
    </typeAliases>

    <!-- 4. 类型处理器 -->
    <typeHandlers>
        <!-- 自定义类型处理器 -->
        <!--typeHandler handler="com.example.handler.MyDateTypeHandler" javaType="java.util.Date"/-->
        <!-- 包扫描方式注册类型处理器 -->
        <package name="org.example.handler"/>
    </typeHandlers>

    <!-- 5. 对象工厂（可选） -->
    <objectFactory type="org.apache.ibatis.reflection.factory.DefaultObjectFactory">
        <!-- 可以配置一些属性 -->
    </objectFactory>

    <!-- 6. 反射器工厂（可选） -->
    <objectWrapperFactory type="org.apache.ibatis.reflection.wrapper.DefaultObjectWrapperFactory"/>

    <!-- 7. 插件配置 -->
    <plugins>
        <plugin interceptor="com.github.pagehelper.PageInterceptor">
            <!-- 分页插件配置 -->
            <property name="helperDialect" value="mysql"/>
            <property name="reasonable" value="true"/>
        </plugin>
        <!--plugin interceptor="com.github.pagehelper.PageInterceptor">
            <property name="dialect" value="mysql"/>
            <property name="offsetAsPageNum" value="true"/>
            <property name="rowBoundsWithCount" value="true"/>
            <property name="reasonable" value="true"/>
        </plugin-->
        <!--plugin interceptor="com.example.plugin.SqlLogInterceptor"/-->
    </plugins>

    <!-- 8. 环境配置，可以配置多个环境 -->
    <environments default="development">
        <environment id="development">
            <!-- 事务管理器类型：JDBC | MANAGED -->
            <transactionManager type="JDBC">
                <!-- 一些属性配置 -->
                <property name="closeConnection" value="false"/>
            </transactionManager>
            <!-- 数据源类型：UNPOOLED | POOLED | JNDI -->
            <dataSource type="POOLED">
                <property name="driver" value="${jdbc.driver}"/>
                <property name="url" value="${jdbc.url}"/>
                <property name="username" value="${jdbc.username}"/>
                <property name="password" value="${jdbc.password}"/>
                <!-- 连接池配置 -->
                <property name="poolMaximumActiveConnections" value="20"/>
                <property name="poolMaximumIdleConnections" value="10"/>
                <property name="poolMaximumCheckoutTime" value="20000"/>
                <property name="poolTimeToWait" value="20000"/>
            </dataSource>
        </environment>

        <!-- 生产环境配置 -->
        <environment id="production">
            <transactionManager type="JDBC"/>
            <dataSource type="POOLED">
                <property name="driver" value="${prod.jdbc.driver}"/>
                <property name="url" value="${prod.jdbc.url}"/>
                <property name="username" value="${prod.jdbc.username}"/>
                <property name="password" value="${prod.jdbc.password}"/>
            </dataSource>
        </environment>
    </environments>

    <!-- 9. 数据库厂商标识 -->
    <databaseIdProvider type="DB_VENDOR">
        <property name="MySQL" value="mysql"/>
        <property name="Oracle" value="oracle"/>
        <property name="SQL Server" value="sqlserver"/>
    </databaseIdProvider>

    <!-- 10. 映射器配置 -->
    <mappers>
        <!-- 使用相对于类路径的资源引用 -->
        <!--mapper resource="mapper/UserMapper.xml"/-->

        <!-- 使用完全限定资源定位符（URL） -->
        <!-- <mapper url="file:///var/mappers/UserMapper.xml"/> -->

        <!-- 使用映射器接口实现类的完全限定类名 -->
        <!--mapper class="org.example.mapper.UserMapper"/-->

        <!-- 包扫描方式，会注册包下的所有接口 -->
        <package name="org.example.mapper"/>
    </mappers>

</configuration>