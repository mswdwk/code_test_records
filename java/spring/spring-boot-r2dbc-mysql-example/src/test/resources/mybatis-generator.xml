<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">

<generatorConfiguration>
    <context id="context" targetRuntime="MyBatis3">

        <!--针对表名和列名使用，默认是双引号（见org.mybatis.generator.config中的属性），在mysql中得是反单引号-->
        <property name="beginningDelimiter" value="`"/>
        <property name="endingDelimiter" value="`"/>
        <property name="javaFileEncoding" value="UTF-8"/>

        <!--相关插件，自定义插件也可以放在这里-->
        <!--生成mapper.xml时覆盖原文件-->
        <plugin type="org.mybatis.generator.plugins.UnmergeableXmlMappersPlugin"></plugin>
        <!--为entity生成序列化方法-->
        <plugin type="org.mybatis.generator.plugins.SerializablePlugin"></plugin>
        <!-- TODO: https://www.cnblogs.com/cblogs/p/9432129.html -->
        <!--自定义的Lombok插件  https://www.cnblogs.com/zhaodalei/p/16788369.html -->
        <!--plugin type="com.example.common.mybatis.MyGenerator"></plugin-->

        <plugin type="org.mybatis.generator.plugins.MyBatisPlugin" >
            <property name="hasLombok" value="true"/>
        </plugin>

        <!--自定义生成Entity和Mapper的代码注释，由于生成的注释没有什么含义（相同的字符），所以默认选择删除，通过插件自定义生成-->
        <commentGenerator>
            <property name="suppressDate" value="true"/>
            <property name="suppressAllComments" value="true"/>
            <property name="addRemarkComments" value="true"/>
        </commentGenerator>

        <!--数据库链接地址账号密码-->
        <jdbcConnection driverClass="com.mysql.cj.jdbc.Driver"
                        connectionURL="jdbc:mysql://192.168.79.132:8025/testdb?useUnicode=true
                            &amp;characterEncoding=utf8&amp;zeroDateTimeBehavior=convertToNull
                            &amp;useSSL=true&amp;serverTimezone=GMT%2B8"
                        userId="root"
                        password="R1o2o3..">
            <property name="nullCatalogMeansCurrent" value="true"/>
            <property name="useInformationSchema" value="true"/>
        </jdbcConnection>

        <!--非必需，类型处理器，数据库类型和java类型之间的转换控制，大部分类型都有默认对应关系，除非想自定义控制-->
        <!--默认的映射类型见，org.mybatis.generator.internal.types.JavaTypeResolverDefaultImpl-->
        <!--javaTypeResolver type="org.example.common.resolver.MyJavaTypeResolver">
            <property name="forceBigDecimals" value="false"/>
        </javaTypeResolver-->

        <!--生成Model类存放位置-->
        <!--targetPackage就是包名，targetProject需要到除最顶层的项目名称外的第二级model，在此处就是到 xx 模块-->
        <javaModelGenerator targetPackage="com.example.entity" targetProject="src\main\java">
            <!--是否允许生成子包，即targetPackage.schemaName.tableName,否则直接在下面生成entity-->
            <property name="enableSubPackages" value="false"/>
            <!--是否添加构造方法，这里采用了lombok，所以不需要-->
            <property name="constructorBased" value="false"/>
            <!--在get方法中，对String字符串调用trim()方法-->
            <property name="trimStrings" value="true"/>
        </javaModelGenerator>

        <!--生成映射文件存放位置-->
        <sqlMapGenerator targetPackage="mapper" targetProject="src\main\resources">
            <property name="enableSubPackages" value="false"/>
        </sqlMapGenerator>

        <!--生成Dao类存放位置-->
        <javaClientGenerator type="XMLMAPPER" targetPackage="com.example.repository" targetProject="src\main\java">
            <property name="enableSubPackages" value="false"/>
        </javaClientGenerator>

        <!--指定需要生成对应表及类名-->
        <!-- 类名 domainObjectName="Blog" -->
        <table tableName="blog"
               enableCountByExample="false" enableUpdateByExample="false"
               enableDeleteByExample="false" enableSelectByExample="false" selectByExampleQueryId="false">
            <!--是否使用数据库真实的字段名，为false将自动转驼峰-->
            <property name="useActualColumnNames" value="false"/>
        </table>
    </context>
</generatorConfiguration>